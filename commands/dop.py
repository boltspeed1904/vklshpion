from vkbottle.api.keyboard import keyboard_gen
from vkbottle import Message
from Models.TortoiseModels import Users
from vkbottle.bot import Blueprint
from .Register import Register, FromMe
bp=Blueprint()
@bp.on.message_handler(Register(), text=["!—É—Å–ª—É–≥–∏", "!—É—Å–ª—É–≥–∞"], lower=True)
async def usluga(ans: Message):
	name_buttons = [[{'text': '–ü—É–Ω–∫—Ç 1', 'color': 'positive'},
					{'text': '–ü—É–Ω–∫—Ç 2', 'color': 'positive'},
					{'text': '–ü—É–Ω–∫—Ç 3', 'color': 'positive'},
					{'text': '–ü—É–Ω–∫—Ç 4', 'color': 'positive'}]]
	name_keyboard = keyboard_gen(name_buttons, one_time=False, inline=True)
	await ans("üìï –°–ø–∏—Å–æ–∫ –º–æ–∏—Ö —É—Å–ª—É–≥:\n·Ö†[1] >> –ù–∞–∫—Ä—É—Ç–∫–∞ —Ñ–æ—Ç–æ–∫ –Ω–∞ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –í–ö.\n·Ö†·Ö†üí∞ –¶–µ–Ω–∞: 50 —Ä—É–± –∑–∞ 10.000 —Ñ–æ—Ç–æ–∫.\n·Ö†[2] >> –ù–∞–∫—Ä—É—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –í–ö.\n·Ö†·Ö†üí∞ –¶–µ–Ω–∞: 100 —Ä—É–± –∑–∞ 1.000 —Å–æ–æ–±—â–µ–Ω–∏–π.\n·Ö†[3] >> –ù–∞–∫—Ä—É—Ç–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–∞ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –í–ö.\n·Ö†·Ö†üí∞ –¶–µ–Ω–∞: 50 —Ä—É–± –∑–∞ 250 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤.\n·Ö†[4] >> –ò–Ω—Ñ–æ [—Å—Å—ã–ª–∫–∞] - –£–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.\n·Ö†·Ö†üí∞ –¶–µ–Ω–∞: –ë–µ—Å–ø–ª–∞—Ç–Ω–æ | –î–æ–ø.—Ñ—É–Ω–∫—Ü–∏–∏: 70 —Ä—É–±.\n\nüìç –ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å, –Ω–∞–ø–∏—à–∏—Ç–µ <<–ü—É–Ω–∫—Ç (–Ω–æ–º–µ—Ä)>>.\nüí° –ù–∞–ø—Ä–∏–º–µ—Ä: –ü—É–Ω–∫—Ç 1", keyboard=name_keyboard)

@bp.on.message_handler(Register(), text=["–ü—É–Ω–∫—Ç 1", "–ø—É–Ω–∫—Ç 1"], lower=True)
async def test(ans: Message):
	lal = await Users.get(user_id=ans.from_id)
	name_buttons = [[{'text': '–ü–æ–ø–æ–ª–Ω–∏—Ç—å üí∂', 'color': 'positive'}]]
	name_keyboard = keyboard_gen(name_buttons, one_time=False, inline=True)
	if lal.balance < 50:
		await ans(f"üö´ –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ!\nüí∏ –í–∞—à –±–∞–ª–∞–Ω—Å: {lal.balance} —Ä—É–±", keyboard=name_keyboard)
		return
	await lal.update_from_dict({'balance': lal.balance-50})
	await lal.save()
	await ans(f"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ –ø—É–Ω–∫—Ç <<–ù–∞–∫—Ä—É—Ç–∫–∏ —Ñ–æ—Ç–æ>>.\nüìç –° –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ —Å–ø–∏—Å–∞–ª–∏: 50 —Ä—É–±.\nüí∏ –í–∞—à –±–∞–ª–∞–Ω—Å: {lal.balance} —Ä—É–±\nüí≥ –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –æ–ø–ª–∞—Ç–∞, –ø–æ—Ç–æ–º –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç–µ —Å–∫—Ä–∏–Ω –æ–ø–ª–∞—Ç—ã –∏ —Å–∫–∏–¥—ã–≤–∞–µ—Ç–µ token —Å —Å–∞–π—Ç–µ vkhost.github.io\nüì¢ –° –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è —Å–∫—Ä–∏–ø—Ç–µ—Ä –∏ –Ω–∞–ø–∏—à–µ—Ç —á—Ç–æ –∏ –∫–∞–∫ –¥–µ–ª–∞—Ç—å.")

@bp.on.message_handler(Register(), text=["–ü—É–Ω–∫—Ç 2", "–ø—É–Ω–∫—Ç 2"], lower=True)
async def test(ans: Message):
	lal = await Users.get(user_id=ans.from_id)
	name_buttons = [[{'text': '–ü–æ–ø–æ–ª–Ω–∏—Ç—å üí∂', 'color': 'positive'}]]
	name_keyboard = keyboard_gen(name_buttons, one_time=False, inline=True)
	if lal.balance < 100:
		await ans(f"üö´ –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ!\nüí∏ –í–∞—à –±–∞–ª–∞–Ω—Å: {lal.balance} —Ä—É–±", keyboard=name_keyboard)
		return
	await lal.update_from_dict({'balance': lal.balance-100})
	await lal.save()
	await ans(f"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ –ø—É–Ω–∫—Ç <<–ù–∞–∫—Ä—É—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π>>.\nüìç –° –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ —Å–ø–∏—Å–∞–ª–∏: 100 —Ä—É–±.\nüí∏ –í–∞—à –±–∞–ª–∞–Ω—Å: {lal.balance} —Ä—É–±\nüí≥ –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –æ–ø–ª–∞—Ç–∞, –ø–æ—Ç–æ–º –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç–µ —Å–∫—Ä–∏–Ω –æ–ø–ª–∞—Ç—ã –∏ —Å–∫–∏–¥—ã–≤–∞–µ—Ç–µ token —Å —Å–∞–π—Ç–µ vkhost.github.io\nüì¢ –° –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è —Å–∫—Ä–∏–ø—Ç–µ—Ä –∏ –Ω–∞–ø–∏—à–µ—Ç —á—Ç–æ –∏ –∫–∞–∫ –¥–µ–ª–∞—Ç—å.")

@bp.on.message_handler(Register(), text=["–ü—É–Ω–∫—Ç 3", "–ø—É–Ω–∫—Ç 3"], lower=True)
async def test(ans: Message):
	lal = await Users.get(user_id=ans.from_id)
	name_buttons = [[{'text': '–ü–æ–ø–æ–ª–Ω–∏—Ç—å üí∂', 'color': 'positive'}]]
	name_keyboard = keyboard_gen(name_buttons, one_time=False, inline=True)
	if lal.balance < 50:
		await ans(f"üö´ –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ!\nüí∏ –í–∞—à –±–∞–ª–∞–Ω—Å: {lal.balance} —Ä—É–±", keyboard=name_keyboard)
		return
	await lal.update_from_dict({'balance': lal.balance-50})
	await lal.save()
	await ans(f"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ –ø—É–Ω–∫—Ç <<–ù–∞–∫—Ä—É—Ç–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤>>.\nüìç –° –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ —Å–ø–∏—Å–∞–ª–∏: 50 —Ä—É–±.\nüí∏ –í–∞—à –±–∞–ª–∞–Ω—Å: {lal.balance} —Ä—É–±\nüí≥ –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –æ–ø–ª–∞—Ç–∞, –ø–æ—Ç–æ–º –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç–µ —Å–∫—Ä–∏–Ω –æ–ø–ª–∞—Ç—ã –∏ —Å–∫–∏–¥—ã–≤–∞–µ—Ç–µ token —Å —Å–∞–π—Ç–µ vkhost.github.io\nüì¢ –° –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è —Å–∫—Ä–∏–ø—Ç–µ—Ä –∏ –Ω–∞–ø–∏—à–µ—Ç —á—Ç–æ –∏ –∫–∞–∫ –¥–µ–ª–∞—Ç—å.")

@bp.on.message_handler(Register(), text=["–ü—É–Ω–∫—Ç 4", "–ø—É–Ω–∫—Ç 4"], lower=True)
async def test(ans: Message):
	name_buttons = [[{'text': '–û–ø–ª–∞—Ç–∏—Ç—å üí≥', 'color': 'positive'},
					{'text': '–ü–æ–ø–æ–ª–Ω–∏—Ç—å üí∂', 'color': 'primary'}]]
	name_keyboard = keyboard_gen(name_buttons, one_time=False, inline=True)
	await ans("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ –ø—É–Ω–∫—Ç <<–ò–Ω—Ñ–æ>>.\nüìù –î–æ–ø.—Ñ—É–Ω–∫—Ü–∏–∏: 70 —Ä—É–±.", keyboard=name_keyboard)